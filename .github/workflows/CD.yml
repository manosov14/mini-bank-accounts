name: CD
on:
  workflow_dispatch: null
  push:
    branches:
      - main
      - develop
      - release/**
      - hotfix-**
      - feature/**
  pull_request:
    branches:
      - main
      - develop
      - release/**
      - hotfix-**
      - feature/**
jobs:
  build:
    name: Build and push Docker image to Dockerhub
    runs-on: ubuntu-20.04
    steps:
      # заливаем исходники
      - name: Check out code
        uses: actions/checkout@v3

      # установка java
      - name: Setup JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: gradle

      # логин в dockerhub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
    
##      установка gradle и запуск сборки
#      - name: Make gradlew executable
#        run: chmod +x ./gradlew
#      - name: Validate Gradle wrapper
#        uses: gradle/wrapper-validation-action@ccb4328a959376b642e027874838f60f8e596de3
#      - name: Setup Gradle
#        uses: gradle/gradle-build-action@v2
#      - name: Execute Gradle build
#        run: ./gradlew --no-daemon clean build
    
      # сбор и деплой образа в dockerhub
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile_prod
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/user-minibank:latest
          labels: ${{ secrets.DOCKERHUB_USERNAME }}/user-minibank:latest
  deploy:
    needs: build
    name: Deploy
    runs-on: ubuntu-20.04

    # коннектимся по SSH,скачиваем образ и запускаем
    steps:
      - name: SSH connect
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_SERVER_IP }}
          username: ${{ secrets.SSH_SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/accounts-minibank:latest
            /bin/bash deploy.sh
